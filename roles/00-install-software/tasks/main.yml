- name: "Update all packages to the latest version"
  apt: upgrade=full

- name: "Adding keys for non public programs"
  apt_key: url={{ item }} state=present
  with_items:
  - https://download.spotify.com/debian/pubkey.gpg
  - https://download.docker.com/linux/ubuntu/gpg

- name: "Adding repos for non public programs"
  apt_repository: repo={{ item }} codename=bionic state=present
  with_items:
  - deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
  - deb http://repository.spotify.com stable non-free
  - ppa:amanusk/python-s-tui

- name: "Getting deb packages"
  get_url: url={{ item['url'] }} dest={{ item['dest'] }} mode=0644 timeout=20
  with_items:
    - url: https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn-release_1.0.0_all.deb
      dest: /tmp/nordvpn.deb
    - url: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.4.2-amd64.deb
      dest: /tmp/slack.deb

- name: "Installing deb packages"
  apt: deb={{ item }} state=present
  with_items:
    - /tmp/slack.deb
    - /tmp/nordvpn.deb

- name: "Installing core packages"
  apt: pkg={{ packages }} state=present update_cache=yes
  vars:
    packages:
    # system and helpers
    - i3-wm
    - htop
    - pavucontrol
    - python3-s-tui
    - stress
    - python-psutil
    - rlwrap

    # must have
    - git
    - vim
    - jq
    - nmap
    - wireshark

    # backup
    - backintime-common
    - backintime-qt4

    # java
    - openjdk-11-jdk
    - maven
    - gradle
  
    # php
    - php-cli
  
    # python
    - python3
    - python3-pip
    - python3-venv
  
    # virtualization
    - virtualbox
    - virtualbox-guest-additions-iso
    - virtualbox-qt
    - vagrant 
      
    # docker
    - docker-ce 
    - docker-ce-cli 
    - containerd.io
  
    # other apps
    - spotify-client
    - vlc
    - nordvpn

- name: "Installing more binaries"
  get_url: url={{ item['url'] }} dest={{ item['dest'] }} mode=0755
  with_items:
  - url: https://cht.sh/:cht.sh
    dest: /usr/local/bin/cht.sh
  - url: https://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose 

- name: "Create Docker group"
  group: name=docker state=present

- name: "Add current user to Docker group"
  user: name="{{ ansible_env['USER'] }}" groups=docker append=yes