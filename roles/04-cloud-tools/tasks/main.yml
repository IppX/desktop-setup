- name: "Create cloud tools directory"
  file: path={{ cloud_tools_path }} state=directory mode=0755

- name: "Installing binary tools"
  get_url: url={{ item['url'] }} dest={{ cloud_tools_path }}/{{ item['name'] }} mode=0755 checksum={{ item['checksum']|default('') }} force=yes
  loop: "{{ tools['binaries'] }}"

- name: "Create archive folder"
  file: path={{ cloud_tools_path }}/archives state=directory mode=0755

- name: "Downloading archived tools"
  get_url: url={{ item['url'] }} dest={{ cloud_tools_path }}/archives/{{ item['name'] }}.{{ item['format'] }} mode=0644 checksum={{ item['checksum']|default('') }} force=yes
  loop: "{{ tools['archives'] }}"

- name: "Unarchive cloud sdk"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/{{ item }}"
    dest: "{{ cloud_tools_path }}/"
  loop:
    - aws.zip
    - gcloud.tar.gz

- name: "Install aws"
  command: "{{ cloud_tools_path }}/aws/install"
  become: yes

- name: "Install gcloud"
  command: "{{ cloud_tools_path }}/google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path={{ ansible_env['HOME'] }}/.bash_profile --additional-components app alpha beta"

- name: "Installing helm"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/helm.tar.gz"
    dest: "{{ cloud_tools_path }}/"
    exclude:
    - "{{ os }}-{{ arch }}/LICENSE"
    - "{{ os }}-{{ arch }}/README.md"
    extra_opts:
    - --strip-components=1

- name: "Installing promtool"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/promtool.tar.gz"
    dest: "{{ cloud_tools_path }}/"
    include:
      - "prometheus-{{ versions['promtool'] }}.{{ os }}-{{ arch }}/promtool"
    extra_opts:
      - --strip-components=1
      -
- name: "Installing amtool"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/amtool.tar.gz"
    dest: "{{ cloud_tools_path }}/"
    include:
      - "alertmanager-{{ versions['amtool'] }}.{{ os }}-{{ arch }}/amtool"
    extra_opts:
      - --strip-components=1

- name: "Installing simple archives"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/{{ item }}.tar.gz"
    dest: "{{ cloud_tools_path }}/"
    exclude:
    - "LICENSE"
    - "README.md"
    - "CHANGELOG.md"
  loop:
    - hugo
    - rbac-lookup
    - dive
    - steampipe
    - logcli

- name: "Create a dir for kubeps1"
  file: path={{ cloud_tools_path }}/archives/kubeps1 state=directory mode=0755

- name: "Unarchive kubeps1"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/kubeps1.tar.gz"
    dest: "{{ cloud_tools_path }}/archives/kubeps1"
    extra_opts:
      - --strip-components=1

- name: "Extract kubeps1 binaries"
  command: mv {{ cloud_tools_path }}/archives/kubeps1/kube-ps1.sh {{ cloud_tools_path }}/

- name: "Add kubeps1 customization"
  copy: src=../files/custom-ps1.sh dest={{ cloud_tools_path }}/

- name: "Installing vault"
  unarchive:
    remote_src: yes
    src: "{{ cloud_tools_path }}/archives/vault.zip"
    dest: "{{ cloud_tools_path }}/"
    mode: 0755

- name: "Update bash profile"
  blockinfile:
    path: "{{ ansible_env['HOME'] }}/.bash_profile"
    block: |
      export PATH="{{ cloud_tools_path }}:$PATH"
      source {{ cloud_tools_path }}/kube-ps1.sh; source {{ cloud_tools_path }}/custom-ps1.sh; PS1="\$(kube_ps1)$PS1";
    marker_begin: "CLOUD TOOLS BEGIN"
    marker_end: "CLOUD TOOLS END"

- name: "Cleanup archives"
  file: path={{ cloud_tools_path }}/archives state=absent

- name: "Install *env tools"
  args:
    executable: /bin/bash
  shell: |
    git clone https://github.com/tfutils/tfenv.git {{ ansible_env['HOME'] }}/.tfenv
    git clone https://github.com/syndbg/goenv.git {{ ansible_env['HOME'] }}/.goenv
    git clone https://github.com/pyenv/pyenv.git {{ ansible_env['HOME'] }}/.pyenv
    git clone https://github.com/pyenv/pyenv-virtualenv.git {{ ansible_env['HOME'] }}/.pyenv/plugins/pyenv-virtualenv

- name: "Update bash profile"
  blockinfile:
    path: "{{ ansible_env['HOME'] }}/.bash_profile"
    block: |
      export PATH="$HOME/.tfenv/bin:$PATH"
      
      export GOENV_ROOT="$HOME/.goenv"
      export PATH="$GOENV_ROOT/bin:$PATH"
      eval "$(goenv init -)"
      export PATH="$GOROOT/bin:$PATH"
      export PATH="$PATH:$GOPATH/bin"
      
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"

    marker_begin: "VIRTENV BEGIN"
    marker_end: "VIRTENV END"

- name: "Install steampipe plugins"
  args:
    executable: /bin/bash
  shell: |
    steampipe plugin install aws
    git clone https://github.com/turbot/steampipe-mod-aws-insights {{ ansible_env['HOME'] }}/github


- name: "Install bash completions"
  become: yes
  args:
    executable: /bin/bash
  shell: |
    set -e;
    {{ cloud_tools_path }}/kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null;
    {{ cloud_tools_path }}/minikube completion bash | sudo tee /etc/bash_completion.d/minikube > /dev/null;
    {{ cloud_tools_path }}/helm completion bash | sudo tee /etc/bash_completion.d/helm > /dev/null;